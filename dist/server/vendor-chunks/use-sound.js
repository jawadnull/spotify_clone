"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/use-sound";
exports.ids = ["vendor-chunks/use-sound"];
exports.modules = {

/***/ "(ssr)/./node_modules/use-sound/dist/use-sound.esm.js":
/*!******************************************************!*\
  !*** ./node_modules/use-sound/dist/use-sound.esm.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   useSound: () => (/* binding */ useSound)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction _extends() {\n    _extends = Object.assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\nfunction useOnMount(callback) {\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(callback, []);\n}\nfunction useSound(src, _ref) {\n    if (_ref === void 0) {\n        _ref = {};\n    }\n    var _ref2 = _ref, _ref2$volume = _ref2.volume, volume = _ref2$volume === void 0 ? 1 : _ref2$volume, _ref2$playbackRate = _ref2.playbackRate, playbackRate = _ref2$playbackRate === void 0 ? 1 : _ref2$playbackRate, _ref2$soundEnabled = _ref2.soundEnabled, soundEnabled = _ref2$soundEnabled === void 0 ? true : _ref2$soundEnabled, _ref2$interrupt = _ref2.interrupt, interrupt = _ref2$interrupt === void 0 ? false : _ref2$interrupt, onload = _ref2.onload, delegated = _objectWithoutPropertiesLoose(_ref2, [\n        \"id\",\n        \"volume\",\n        \"playbackRate\",\n        \"soundEnabled\",\n        \"interrupt\",\n        \"onload\"\n    ]);\n    var HowlConstructor = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(null);\n    var isMounted = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(false);\n    var _React$useState = react__WEBPACK_IMPORTED_MODULE_0___default().useState(null), duration = _React$useState[0], setDuration = _React$useState[1];\n    var _React$useState2 = react__WEBPACK_IMPORTED_MODULE_0___default().useState(null), sound = _React$useState2[0], setSound = _React$useState2[1];\n    var handleLoad = function handleLoad() {\n        if (typeof onload === \"function\") {\n            // @ts-ignore\n            onload.call(this);\n        }\n        if (isMounted.current) {\n            // @ts-ignore\n            setDuration(this.duration() * 1000);\n        } // @ts-ignore\n        setSound(this);\n    }; // We want to lazy-load Howler, since sounds can't play on load anyway.\n    useOnMount(function() {\n        __webpack_require__.e(/*! import() */ \"vendor-chunks/howler\").then(__webpack_require__.t.bind(__webpack_require__, /*! howler */ \"(ssr)/./node_modules/howler/dist/howler.js\", 23)).then(function(mod) {\n            if (!isMounted.current) {\n                var _mod$Howl;\n                // Depending on the module system used, `mod` might hold\n                // the export directly, or it might be under `default`.\n                HowlConstructor.current = (_mod$Howl = mod.Howl) !== null && _mod$Howl !== void 0 ? _mod$Howl : mod[\"default\"].Howl;\n                isMounted.current = true;\n                new HowlConstructor.current(_extends({\n                    src: Array.isArray(src) ? src : [\n                        src\n                    ],\n                    volume: volume,\n                    rate: playbackRate,\n                    onload: handleLoad\n                }, delegated));\n            }\n        });\n        return function() {\n            isMounted.current = false;\n        };\n    }); // When the `src` changes, we have to do a whole thing where we recreate\n    // the Howl instance. This is because Howler doesn't expose a way to\n    // tweak the sound\n    react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(function() {\n        if (HowlConstructor.current && sound) {\n            setSound(new HowlConstructor.current(_extends({\n                src: Array.isArray(src) ? src : [\n                    src\n                ],\n                volume: volume,\n                onload: handleLoad\n            }, delegated)));\n        } // The linter wants to run this effect whenever ANYTHING changes,\n    // but very specifically I only want to recreate the Howl instance\n    // when the `src` changes. Other changes should have no effect.\n    // Passing array to the useEffect dependencies list will result in\n    // ifinite loop so we need to stringify it, for more details check\n    // https://github.com/facebook/react/issues/14476#issuecomment-471199055\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        JSON.stringify(src)\n    ]); // Whenever volume/playbackRate are changed, change those properties\n    // on the sound instance.\n    react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(function() {\n        if (sound) {\n            sound.volume(volume);\n            sound.rate(playbackRate);\n        } // A weird bug means that including the `sound` here can trigger an\n    // error on unmount, where the state loses track of the sprites??\n    // No idea, but anyway I don't need to re-run this if only the `sound`\n    // changes.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        volume,\n        playbackRate\n    ]);\n    var play = react__WEBPACK_IMPORTED_MODULE_0___default().useCallback(function(options) {\n        if (typeof options === \"undefined\") {\n            options = {};\n        }\n        if (!sound || !soundEnabled && !options.forceSoundEnabled) {\n            return;\n        }\n        if (interrupt) {\n            sound.stop();\n        }\n        if (options.playbackRate) {\n            sound.rate(options.playbackRate);\n        }\n        sound.play(options.id);\n    }, [\n        sound,\n        soundEnabled,\n        interrupt\n    ]);\n    var stop = react__WEBPACK_IMPORTED_MODULE_0___default().useCallback(function(id) {\n        if (!sound) {\n            return;\n        }\n        sound.stop(id);\n    }, [\n        sound\n    ]);\n    var pause = react__WEBPACK_IMPORTED_MODULE_0___default().useCallback(function(id) {\n        if (!sound) {\n            return;\n        }\n        sound.pause(id);\n    }, [\n        sound\n    ]);\n    var returnedValue = [\n        play,\n        {\n            sound: sound,\n            stop: stop,\n            pause: pause,\n            duration: duration\n        }\n    ];\n    return returnedValue;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useSound);\n //# sourceMappingURL=use-sound.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/use-sound/dist/use-sound.esm.js\n");

/***/ })

};
;